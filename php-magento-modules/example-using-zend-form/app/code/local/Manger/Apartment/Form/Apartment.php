<?php
/**
 * Zend form is used for validating.  It can also be used for filtering if need be.
 * The frontend code uses html written by hand instead of html generated by zend form
 * because that can easily confuse anyone trying to edit it.
 *
 * @category    Apartment
 * @package     Manger
 * @author   	Chris Manger (chris-manger.com)
 */
class Manger_Apartment_Form_Apartment extends Zend_Form
{
    /**
     * Adds validators to the form elements.  Can also be used to add filters too.
     */
    public function init()
    {
        $apartmentName = $this->addElement('text','apartment_name',
            array(
                'validators'  => array('alnum'),
                'required'    => true,
            )
        );

        $ownerName = $this->addElement('text','number_current_residents',
            array(
                'validators'    => array('digits'),
                'required'      => true,
            )
        );

        $email = $this->addElement('text','email_primary',
            array(
                'validators'    => array('emailAddress'),
                'required'      => true,
            )
        );

        $yearEstablished = $this->addElement('text','year_established',
            array(
                'validators'    => array('digits'),
            )
        );

        $maxOccupants = $this->addElement('text','max_occupants',
            array(
                'validators'    => array('digits'),
            )
        );
    }

    /**
     * Determines if the form is valid.
     * @return bool
     */
    public function isFormValid()
    {
        $data = $this->getRequest()->getPost();
        $isValid = parent::isValid($data);
        $session = Mage::getSingleton('core/session');
        $isSubmitted = $this->getRequest()->getPost('is_submitted');

        if(!$isValid && $isSubmitted) {
            foreach($this->getElements() as $element) {
                if($element->hasErrors()) {
                    foreach($element->getMessages() as $error) {
                        $session->addError($error);
                    }
                }
            }
        }

        return $isValid;
    }

    /**
     * Returns the field value.
     * @param string $fieldname
     * @return mixed|null
     */
    public function getFieldValue($fieldname = '')
    {
        $fieldValue = null;

        $request = $this->getRequest();
        $isSubmitted = $request->getPost('is_submitted');
        if($fieldname && $isSubmitted && $request->getPost($fieldname)) {
            $fieldValue = $request->getPost($fieldname);
        }

        return $fieldValue;
    }

    /**
     * Returns the request object.
     * @return Mage_Core_Controller_Request_Http
     */
    public function getRequest()
    {
        return Mage::app()->getRequest();
    }
}